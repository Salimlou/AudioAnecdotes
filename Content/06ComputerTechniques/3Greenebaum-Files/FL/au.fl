/*
 * Copyright (c) 1997-2001 Alexandros Eleftheriadis, Yuntai Kyong and 
 * Danny Hong
 *
 * This file is part of Flavor, developed at Columbia University
 * (www.ee.columbia.edu/flavor)
 *
 * Flavor is free software; you can redistribute it and/or modify
 * it under the terms of the Flavor Artistic License as described in
 * the file COPYING.txt. 
 *
 */

/* 
 * Authors:
 * Danny Hong <danny@ee.columbia.edu>
 *
 */
 

/*
 * AU File Format
 *
 * This example reads audio files in the NeXT/Sun audio formats.
 *
 */


%pragma trace


const int SND_FORMAT_UNSPECIFIED		   = 0;  // unspecified format 
const int SND_FORMAT_MULAW_8			   = 1;  // 8-bit mu-law samples 
const int SND_FORMAT_LINEAR_8			   = 2;  // 8-bit linear samples 
const int SND_FORMAT_LINEAR_16			   = 3;  // 16-bit linear samples 
const int SND_FORMAT_LINEAR_24			   = 4;  // 24-bit linear samples 
const int SND_FORMAT_LINEAR_32			   = 5;  // 32-bit linear samples 
const int SND_FORMAT_FLOAT				   = 6;  // floating-point samples 
const int SND_FORMAT_DOUBLE				   = 7;  // double-precision float samples 
const int SND_FORMAT_INDIRECT			   = 8;  // fragmented sampled data 
const int SND_FORMAT_NESTED				   = 9;  // ? 
const int SND_FORMAT_DSP_CORE			   = 10; // DSP program 
const int SND_FORMAT_DSP_DATA_8			   = 11; // 8-bit fixed-point samples 
const int SND_FORMAT_DSP_DATA_16		   = 12; // 16-bit fixed-point samples 
const int SND_FORMAT_DSP_DATA_24		   = 13; // 24-bit fixed-point samples 
const int SND_FORMAT_DSP_DATA_32		   = 14; // 32-bit fixed-point samples 
// const int ?								   = 15; // ?
const int SND_FORMAT_DISPLAY			   = 16; // non-audio display data 
const int SND_FORMAT_MULAW_SQUELCH		   = 17; // ? 
const int SND_FORMAT_EMPHASIZED			   = 18; // 16-bit linear with emphasis 
const int SND_FORMAT_COMPRESSED			   = 19; // 16-bit linear with compression 
const int SND_FORMAT_COMPRESSED_EMPHASIZED = 20; // A combination of the two above 
const int SND_FORMAT_DSP_COMMANDS		   = 21; // Music Kit DSP commands 
const int SND_FORMAT_DSP_COMMANDS_SAMPLES  = 22; // ?

/*
 * Header
 *
 */
class Header {
    char(8) magic[4]        = ".snd";
    int(32) dataLocation;
    int(32) dataSize;
    int(32) dataFormat;
    int(32) samplingRate;
    int(32) channelCount;
    char(8) info[dataLocation-24];  // Min size is 4
}

/*
 * AU File (NeXT/Sun Audio File)
 *
 */
class AU {
    Header hd;
}
